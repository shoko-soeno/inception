# the version of the Docker Compose file is 3.8 which is compatible with Docker Engine 19.03.0 and above.
# version: '3.8'

services:
  nginx:
    # NGINXのサービス定義
    container_name: nginx
    build:
      context: ./requirements/nginx # Dockerfileの場所
      dockerfile: Dockerfile # Dockerfileの名前
    image: nginx:ft_inception # イメージ名
    depends_on:
      - wordpress
    restart: always
    ports:
      - "443:443" # SSL通信のためのポート

    volumes:
      - wp_data:/var/www/html # WordPressのデータをNGINXコンテナで参照できるようにする
      - ./requirements/nginx/conf/nginx.conf:/etc/nginx/conf.d/default.conf
      - ssl_certs:/etc/nginx/ssl # SSL証明書のボリューム
    networks:
      - inception

  wordpress:
    # WordPressのサービス定義
    build: ./requirements/wordpress # Dockerfileの場所
    image: wordpress:ft_inception # イメージ名
    container_name: wordpress
    env_file:
      - .env
    restart: always
    depends_on:
      mariadb:
        condition: service_healthy # MariaDBが起動してからWordPressを起動する
    volumes:
      - wp_data:/var/www/html
    networks:
      - inception

  mariadb:
    # MariaDBのサービス定義
    container_name: mariadb
    build:
      context: ./requirements/mariadb # Dockerfileの場所
      dockerfile: Dockerfile
    image: mariadb:ft_inception # イメージ名
    env_file:
      - .env
    restart: always
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 30s
    volumes:
      - db_data:/var/lib/mysql # WordPressのデータをMariaDBコンテナで参照できるようにする
    networks:
      - inception

volumes:
  db_data:
    name: db_data
    driver: local
    driver_opts:
      device: ${HOME}/data/db_data
      o: bind
      type: none
  ssl_certs:
    name: ssl_certs
    driver: local
    driver_opts:
      device: ${HOME}/data/ssl_certs
      o: bind
      type: none
  wp_data:
    name: wp_data
    driver: local
    driver_opts:
      device: ${HOME}/data/wp_data
      o: bind
      type: none

networks:
  inception:
    name: user_defined_network
    driver: bridge

# ENTRYPOINT にはexecを使用。 tail -f / sleep infinity 使用禁止
# 無限ループやバックグラウンド起動 (nginx & bash) 禁止
# PID 1 で正しいプロセスが起動しているか
